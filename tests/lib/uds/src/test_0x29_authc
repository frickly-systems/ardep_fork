/*
 * Copyright (C) Frickly Systems GmbH
 * Copyright (C) MBition GmbH
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#include "ardep/uds.h"
#include "fixture.h"
#include "iso14229.h"
#include "zephyr/ztest_assert.h"

#include <zephyr/ztest.h>

UDSErr_t auth_0x29_check_fn(const struct uds_context *const context,
                            bool *apply_action) {
  *apply_action = true;
  return UDS_OK;
}

UDSErr_t auth_0x29_action_fn(struct uds_context *const context,
                             bool *consume_event) {}

ZTEST_F(lib_uds, test_0x29_auth) {
  struct uds_instance_t *instance = fixture->instance;

  data_id_check_fn_fake.custom_fake = auth_0x29_check_fn;
  data_id_action_fn_fake.custom_fake = auth_0x29_action_fn;

  UDSAuthArgs_t args = {
    .copy = copy_fake,
  };

  int ret = receive_event(instance, UDS_EVT_RoutineCtrl, &args);
  zassert_ok(ret);

  uint8_t response_data[] = {0x11, 0x22};
  assert_copy_data(response_data, sizeof(response_data));

  zassert_equal(data_id_action_fn_fake.call_count, 1);
}